
/**
 *
 * @param play_url
 * @param width
 * @param height
 * @param player_type 使用什么播放器进行播放，默认为ckplayer,若有值则为混合播放即HTTP使用CKPLAYER,RTMP使用默认播放器
 * @returns {string} 返回创建播放器的DOM元素
 */
function embed_flash_player(play_url,width,height,player_type)
{
    var host = window.location.hostname;
    var port = window.location.port;
    var dom = "";


    //初使化播放器的宽度和高度
    if(width == undefined || height == undefined ||width == "" || height == "" )
    {
        width = 400;
        height = 300;
    }
    //初使化播放器的类型
    if(player_type == undefined || player_type =="")
    {
        player_type = "ckplayer";
    }
    else
    {
        player_type = "default";

    }

    //初使化swfpath路径
    var ckplayer_swfpath = "";
    var default_swfpath = "";
    if(port == "")
    {
        ckplayer_swfpath = "http://"+host+"/ckplayer/ckplayer.swf";
        default_swfpath = "http://"+host+"/StrobeMediaPlayback.swf";
    }
    else
    {
        ckplayer_swfpath = "http://"+host+":"+port+"/ckplayer/ckplayer.swf";
        default_swfpath = "http://"+host+":"+port+"/StrobeMediaPlayback.swf";
    }
    //初使化CKPLAYER播放视频类型
    var videoType = 1;//flv is 1,mp4 is 2
    if(play_url.indexOf(".mp4") != -1)
    {
        videoType = 2;
    }
    if(play_url.indexOf(".flv") == -1)
    {
        videoType = 2;
    }


    if(player_type = "ckplayer" )
    {
       dom = get_ckplayer_dom(play_url,ckplayer_swfpath,videoType,width,height);
    }
    else if(player_type == "default")
    {
       dom = get_default_player_dom(play_url,default_swfpath,"vod",width,height);
    }

    return dom;
}

/**
 *
 * @param play_url
 * @param width
 * @param height
 * @param player_type 使用什么播放器进行播放，默认为ckplayer,若有值则为混合播放即HTTP使用CKPLAYER,RTMP使用默认播放器
 */
function init_share_player(play_url,width,height,player_type)
{
    var dom = embed_flash_player(play_url,width,height,player_type);

    /*dom = dom.replace(/[ ]/g,"");//去掉空格
    dom = dom.replace(/[\r\n]/g,"");//去掉回车符*/
    var share_dom = '<div style="margin-bottom:5px;color: #000; float: left">'+ReferenceAddress+'&nbsp;<input type="text" style="border: 1px solid #bac7d2;" value="'+dom+'" id="addr" name="addr"  size="70"></div>';
    var js = "<script>$(function(){$('#addr').focus();$('#addr').select();$('#addr').focus(function(){$(this).select()})})</script>"
    return share_dom+js;
}
/**
 * 获取CKPLAYER播放时的DOM元素
 * @param play_url
 * @param swfpath
 * @param videoType   videoType = 1;//flv videoType = 2;//mp4
 * @param width
 * @param height
 * @returns {string|*}
 */
function get_ckplayer_dom(play_url,swfpath,videoType,width,height)
{
    dom = "<object style='background:#000'  width='"+width+"' height='"+height+"' align='middle' name='StrobeMediaPlayback_object'  id='StrobeMediaPlayback_object' codebase='http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=10,0,0,0' type='application/x-shockwave-flash' classid='clsid:d27cdb6e-ae6d-11cf-96b8-444553540000' pluginspage='http://www.macromedia.com/go/getflashplayer'>";
    dom+="<param name='movie' value='"+swfpath+"' />";
    dom+="<param name='quality' value='high' />";
    dom+="<param name='bgcolor' value='#000000' />";
    dom+="<param name='allowfullscreen' value='true' />";
    dom+="<param name='flashvars'	value='f="+play_url+"&s=0&c=0&e=1&v=80&p=1&h=3&wh=16:9&h="+videoType+"' />";
    dom+="<embed style='background:#000' src='"+swfpath+"' width='"+width+"' height='"+height+"' align='middle' id='StrobeMediaPlayback_embed' quality='high'";
    dom+="bgcolor='#000000' name='StrobeMediaPlayback_embed' allowfullscreen='true'";
    dom+="pluginspage='http://www.adobe.com/go/getflashplayer' ";
    dom+="flashvars='f="+play_url+"&s=0&c=0&e=1&v=80&p=1&h=3&wh=16:9&h="+videoType+"'";
    dom+="type='application/x-shockwave-flash'>";
    dom+="</embed>";
    dom+="</object>";
    return dom;

}
/**
 * 获取默认FLASH播放器的DOM元素
 * @param play_url
 * @param swfpath
 * @param streamType  vod为点播  live为直播
 * @param width
 * @param height
 * @returns {string|*}
 */
function get_default_player_dom(play_url,swfpath,streamType,width,height)
{
    play_url = play_url.replace("|","/");
    var swfpath = "/StrobeMediaPlayback.swf";
    dom = "<object style='background:#000' wmode='transparent' width='"+width+"' height='"+height+"'  id='StrobeMediaPlayback_object_' type='application/x-shockwave-flash' classid='clsid:d27cdb6e-ae6d-11cf-96b8-444553540000'>";
    dom+="<param name='movie' value='"+swfpath+"' />";
    dom+="<param name='quality' value='high' />";
    dom+="<param name='bgcolor' value='#000000' />";
    dom+="<param name='allowfullscreen' value='true' />";
    dom+="<param name='flashvars'	value='&src="+play_url+"&autoHideControlBar=true&streamType="+streamType+"&autoPlay=true' />";
    dom+="<embed style='background:#000' wmode='transparent' src='"+swfpath+"' width='"+width+"' height='"+height+"' id='StrobeMediaPlayback_embed' quality='high'";
    dom+="bgcolor='#000000' name='StrobeMediaPlayback' allowfullscreen='true'";
    dom+="pluginspage='http://www.adobe.com/go/getflashplayer'";
    dom+="flashvars='&src="+play_url+"&autoHideControlBar=true&streamType="+streamType+"&autoPlay=true'";
    dom+="type='application/x-shockwave-flash'>";
    dom+="</embed>";
    dom+="</object>";
    return dom;
}


/**
 * 加载ckplayer对象参数
 * @param url  播放地址
 * @param tiptime  提示点时间
 * @param tipcontent  提示点文字
 * @param cnsrt 中文字幕
 * @param ensrt 英文字幕
 * @param headEndTime 跳播开头时间
 * @param tailStartTime 跳播结束时间
 * @param bAdvertTime 广告持续时间
 * @param bAdvertCon 前置广告文件路径
 * @param bAdvertUrl 前置广告跳转地址   暂时设置为空
 * @param pAdvertCon 暂停时播放的广告
 * @param pAdvertUrl 暂停时播放的广告跳转地址   暂时设置为空
 * @param videoType 前置广告跳转地址   暂时设置为空
 * @returns  返回 ckplayer 参数对象
 */
function get_flash_var(url, tiptime, tipcontent, cnsrt, ensrt, headEndTime,tailStartTime, bAdvertTime, bAdvertCon, bAdvertUrl, pAdvertCon,pAdvertUrl,videoType)
{
		var playUrl = url;
	    var f = "";
	    var a = "";
	    var s = "0";
	    var my_url = encodeURIComponent(window.location.href);
	    if(playUrl.indexOf("rtmp://")==-1)
	    {
	    	playUrl = encodeURI(encodeURI(playUrl));
	    }
	    	f = playUrl;
		
		var flashvars = {
			f : f,//视频地址  可以支持HTTP的方式播放MP4文件
			a : a,//调用时的参数，只有当s>0的时候有效
			s : s,//调用方式，0=普通方法（f=视频地址），1=网址形式,2=xml形式，3=swf形式(s>0时f=网址，配合a来完成对地址的组装)
			c : '0',//是否读取文本配置,0不是，1是
			x : '',//调用配置文件路径，只有在c=1时使用。默认为空调用的是ckplayer.xml
			i : '',//初始图片地址 
			d : pAdvertCon,//暂停时播放的广告，swf/图片,多个用竖线隔开，图片要加链接地址，没有的时候留空就行
			u : pAdvertUrl,//暂停时如果是图片的话，加个链接地址
			l : bAdvertCon,//前置广告，swf/图片/视频，多个用竖线隔开，图片和视频要加链接地址    *****若有前置广告则不会去自动播放
			r : bAdvertUrl,//前置广告的链接地址，多个用竖线隔开，没有的留空
			t : bAdvertTime,//视频开始前播放swf/图片时的时间，多个用竖线隔开
			y : '',//这里是使用网址形式调用广告地址时使用，前提是要设置l的值为空
			z : '',//缓冲广告，只能放一个，swf格式
			e : '0',//视频结束后的动作，0是调用js函数，1是循环播放，2是暂停播放并且不调用广告，3是调用视频推荐列表的插件，4是清除视频流并调用js功能和1差不多，5是暂停播放并且调用暂停广告
			v : '80',//默认音量，0-100之间
			p : '1',//视频默认0是暂停，1是播放，2是不加载视频
			h : videoType,//播放http视频流时采用何种拖动方法，=0不使用任意拖动，=1是使用按关键帧，=2是按时间点，=3是自动判断按什么(如果视频格式是.mp4就按关键帧，.flv就按关键时间)，=4也是自动判断(只要包含字符mp4就按mp4来，只要包含字符flv就按flv来)
			q : '',//视频流拖动时参考函数，默认是start
			m : '',//让该参数为一个链接地址时，单击播放器将跳转到该地址
			o : '',//当p=2时，可以设置视频的时间，单位，秒
			w : '',//当p=2时，可以设置视频的总字节数
			g : headEndTime,//视频直接g秒开始播放
			j : tailStartTime,//跳过片尾功能，j>0则从播放多少时间后跳到结束，<0则总总时间-该值的绝对值时跳到结束
			k : tiptime,//提示点时间，如 30|60鼠标经过进度栏30秒，60秒会提示n指定的相应的文字
			n : tipcontent,//提示点文字，跟k配合使用，如 提示点1|提示点2
			b : '0',
			wh : '16:9',//宽高比，可以自己定义视频的宽高或宽高比如：wh:'4:3',或wh:'1080:720'
			lv : '0',//是否是直播流，=1则锁定进度栏		
			loaded : 'loadedHandler',//当播放器加载完成后发送该js函数loaded
			subtitle_cn : cnsrt,
			subtitle_en : ensrt,
			//以下为自定义的播放器参数用来在插件里引用的
			my_url : my_url
		//本页面地址
		//调用自定义播放器参数结束
		};
	

		return flashvars;
	}
